const puppeteer = require('puppeteer');
const { delay, getHashtags } = require('./function');
const fs = require('fs');
const path = require('path');

///////////////////////////////////////////////////////////////////////
const COOCKIE_PATH = path.join(__dirname, '/temp/cookies.json');
///////////////////////////////////////////////////////////////////////


/**
 * 
 * @param {puppeteer.Page} page 
 * @param {puppeteer.Browser} browser 
 * @returns 
 */
exports.parseCockie = async function() {
    const browser = await puppeteer.launch({
        headless: false,                                     // –í–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –¥–ª—è –¥–µ–±–∞–≥–∞
        args: [
            '--no-sandbox',                                  // –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ä–µ–¥–∞—Ö
            '--disable-setuid-sandbox',
            '--disable-blink-features=AutomationControlled',  // –ò–∑–±–µ–≥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
            '--disable-features=IsolateOrigins,SitePerProcess'
        ]
    });

    try{
        const page = await browser.newPage();
        await page.setViewport({ width: 1280, height: 720 });
        await page.setExtraHTTPHeaders({'Accept-Language': 'ru-RU,ru;q=0.9'});
        await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');
        await page.goto('https://www.tiktok.com/login/phone-or-email/email', { waitUntil: 'networkidle2' });
        
        
        if(globalThis.CONFIG) {
            // –í–≤–æ–¥–∏–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            await page.type('input[name="username"]', CONFIG.tk_login);
            await page.type('input[type="password"]', CONFIG.tk_password);
        }
        else {
            await page.type('input[name="username"]', 'intimalive@gmail.com');
            await page.type('input[type="password"]', 'Polina2015_');
        }

        // —É–±–∏—Ä–∞–µ–º –≥–æ–≤–Ω–æ –±–∞–Ω–µ—Ä
        await page.evaluate(()=> {
            const banner = document.querySelector('tiktok-cookie-banner');
            if(banner && banner.shadowRoot) {
                const acceptButton = banner.shadowRoot.querySelector('button:last-child');
                if(acceptButton) acceptButton.click();
            }
        });

        // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞
        await page.waitForSelector('[data-e2e="login-button"]');
        await page.click('[data-e2e="login-button"]');
        await page.waitForNavigation({ waitUntil: 'networkidle2' });

        // –ü–æ–ª—É—á–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫—É–∫–∏
        const cookies = await browser.cookies();
        browser.close();
        //console.log('COCKIES: ', cookies);
        fs.writeFileSync(COOCKIE_PATH, JSON.stringify(cookies));

        return cookies;
    }
    catch {
        browser.close();
        console.error('authorize error');
    }
}
async function typeTextWithHashtags(page, descriptionField, text) { 
    const hashtags = getHashtags(text);  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ö–µ—à—Ç–µ–≥–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞
    let position = 0;

    for(let hashtag of hashtags) {
        const hashtagIndex = text.indexOf(hashtag, position); // –ò—â–µ–º —Ö–µ—à—Ç–µ–≥ –≤ —Ç–µ–∫—Å—Ç–µ —Å —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏

        // –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ —Ö–µ—à—Ç–µ–≥–æ–º
        if(hashtagIndex > position) {
            await descriptionField.type(text.slice(position, hashtagIndex), { delay: 40 });
        }

        // –í—Å—Ç–∞–≤–ª—è–µ–º —Å–∞–º —Ö–µ—à—Ç–µ–≥
        await descriptionField.type(hashtag, { delay: 40 });

        // –ñ–¥–µ–º, –ø–æ–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
        try {
            await page.waitForSelector('.hashtag-suggestion-item', { visible: true, timeout: 2000 });
            console.log('Hash tag suggestion visible');

            // –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —Ö–µ—à—Ç–µ–≥ –∏–∑ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
            const firstHashtag = await page.$('.hashtag-suggestion-item');
            if(firstHashtag) {
                await firstHashtag.click();
                await delay(400);
            }
        } 
        catch(error) {
            console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å —Ö–µ—à—Ç–µ–≥ ${hashtag}: ${error.message}`);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö–µ—à—Ç–µ–≥–∞
        position = hashtagIndex + hashtag.length;

        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ —Ö–µ—à—Ç–µ–≥–∞ (–µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –æ–Ω –±—ã–ª)
        if(text[position] === ' ') {
            await descriptionField.type(' ', { delay: 40 });
            position++;
        }

        await delay(200);  // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ö–µ—à—Ç–µ–≥–æ–º
    }

    // –í—Å—Ç–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ö–µ—à—Ç–µ–≥–∞
    if (position < text.length) {
        await descriptionField.type(text.slice(position), { delay: 40 });
    }
}


/**
 * –†–∞–±–æ—á–∏–π –±–æ—Ç—è—Ä–∞ –∑–∞–≥—Ä—É–∑—á–∏–∫ –≤ —Ç–∏–∫–∏ —Ç–∞–∫–∏ –≤–∏–¥–µ–æ —Å –º–∞—à–∏–Ω–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Å–ø–∏–∑–∂–µ–Ω–Ω—ã–º –≤–∏–¥–µ–æ
 * @param {string} videoPath –ø—É—Ç—å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ (—É–¥–∞–ª–µ–Ω–Ω—ã–π)
 * @param {string} label –∫–æ–ø–∏—Ä–∞–π—Ç –Ω–∞ –≤–∏–¥–µ–æ
 * @param {string} textGpt –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤–∏–¥–µ–æ, –æ—Ç GPT
 * @param {(txt:string, error:any)=> void} caller —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä
 */
exports.botLoader = async function(resultMirror, textGpt, caller) {
    var cookies = JSON.parse(fs.readFileSync(COOCKIE_PATH, 'utf-8'));
    if(!cookies || cookies.length === 0) cookies = await exports.parseCockie();
    
    
    if(cookies && cookies.length > 0) {
        try {
            const browser = await puppeteer.launch({
                headless: false,  // –í–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –¥–ª—è –¥–µ–±–∞–≥–∞
                args: [
                    '--no-sandbox',  // –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ä–µ–¥–∞—Ö
                    '--disable-setuid-sandbox',
                    '--disable-blink-features=AutomationControlled'  // –ò–∑–±–µ–≥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
                ],
            });
            await browser.setCookie(...cookies);
            const page = await browser.newPage();
            await page.setViewport({ width: 1280, height: 720 });
            await page.setExtraHTTPHeaders({'Accept-Language': 'ru-RU,ru;q=0.9'});
            //await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36');
            
            // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
            await page.goto('https://www.tiktok.com/upload', { waitUntil: 'networkidle2' });

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–ø–∞–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
            const isLoginPage = await page.evaluate(()=> !!document.querySelector('h2[data-e2e="login-title"]'));
            if(isLoginPage) {
                await browser.close();
                cookies = await parseCookie();          // –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º –∑–∞–Ω–æ–≤–æ
                if(!cookies) {
                    caller('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –∫—É–∫–∏. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å.');
                    return;
                }

                // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Å –Ω–æ–≤—ã–º–∏ –∫—É–∫–∞–º–∏
                return exports.botLoader(resultMirror, textGpt, caller);
            }

            
            if(typeof resultMirror === 'string') {
                // —É–±–∏—Ä–∞–µ–º –≥–æ–≤–Ω–æ –±–∞–Ω–µ—Ä
                await page.evaluate(() => {
                    const banner = document.querySelector('tiktok-cookie-banner');
                    if(banner && banner.shadowRoot) {
                        const acceptButton = banner.shadowRoot.querySelector('button:last-child');
                        if(acceptButton) acceptButton.click();
                    }
                });

                // –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ
                await page.waitForSelector('input[type="file"]');
                const fileInput = await page.$('input[type="file"]');

                if(fileInput) await fileInput.uploadFile(resultMirror);
                else caller('‚ùåüíÄ C–±–æ–π!!!', '–°–±–æ–π. –ù–µ –Ω–∞–π–¥–µ–Ω –∏–Ω–ø—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ.');

                // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è
                await page.waitForSelector('div[contenteditable="true"]', { visible: true });
                const descriptionField = await page.$('div[contenteditable="true"]');
                await descriptionField.click();             // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ
                await delay(200);
                await page.keyboard.press('Control'); 
                await page.keyboard.press('A');             // –í—ã–¥–µ–ª—è–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç
                await delay(200);
                await page.keyboard.press('Backspace');     // –£–¥–∞–ª—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
                await delay(100);
                await page.keyboard.press('Backspace');
                await delay(100);
                await typeTextWithHashtags(page, descriptionField, textGpt.replace(/"/g, ''));

                await Promise.race([
                    page.waitForSelector('.info-status.success', { visible: true }),
                    page.waitForSelector('.info-status-item.success-info', { visible: true })
                ]);
                
                // –û–∂–∏–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                await page.waitForSelector('[data-e2e="post_video_button"]', {visible: true});
                await page.evaluate(()=> {
                    document.querySelector('[data-e2e="post_video_button"]')
                        .scrollIntoView({ behavior: "smooth", block: "center" });
                });
                

                // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                await page.evaluate(()=> {
                    document.querySelector('[data-e2e="post_video_button"]').click();
                });
                //await page.click('[data-e2e="post_video_button"]', { delay: 100 });
                caller('üéâ –í–∏–¥–µ–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ. –ò –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è tik-tok.(3 min bot panding)')

                // ? –Ω—É–∂–Ω–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è puppeter
                setTimeout(()=> {browser?.close(); caller('ü§ñ Browser bot close');}, 3 * (60*1000));
            } 
        } 
        catch (error) {
            caller('‚ùåüíÄ C–±–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ç–æ—Ä–∞!!!', {
                label: 'Error',
                text: '‚ùåüíÄ –ë–æ—Ç —Å–ª–æ–≤–∏–ª –∫–∞–∫–æ–µ —Ç–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ',
                error: error
            });
            await browser?.close();
        } 
    } 
    else {
        // –û—à–∏–±–∫–∞ —Å –∫—É–∫–∏
        caller('‚ùå C–±–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ù–∞–¥–æ –ø—Ä–æ–π—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.', {
            label: 'Coockie error',
            text: '–ù–µ—Ç –∫—É–∫–∏ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ!!!'
        });
        await browser?.close();
    }
}


/**
 * –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ url –≤–∏–¥–µ–æ –∞–∫–∫–∞—É–Ω—Ç–∞ username tik-tok
 * @param {string} username 
 * @returns {Promise<string[]>}
 */
exports.getTikTokPosts = async (username)=> {
    const browser = await puppeteer.launch({ headless: true });
    const page = await browser.newPage();
    await page.goto(`https://www.tiktok.com/@${username}`);
  
    const videos = await page.evaluate(()=> {
        return Array.from(document.querySelectorAll('a[href*="/video/"]')).map((a)=> a.href);
    });


    await browser.close();
    return videos;
}


// —Ç—É—Ç –≥–æ–¥–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
async function test() {
    const browser = await puppeteer.launch({
        headless: false,  // –í–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º –¥–ª—è –¥–µ–±–∞–≥–∞
        args: [
            '--no-sandbox',  // –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ä–µ–¥–∞—Ö
            '--disable-setuid-sandbox',
            '--disable-blink-features=AutomationControlled'  // –ò–∑–±–µ–≥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        ]
    });

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const [page] = await browser.pages();

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∫—É–∫–∏
    const cookies = JSON.parse(fs.readFileSync(COOCKIE_PATH, 'utf-8'));
    browser.setCookie(...cookies);
    //await page.setCookie(...cookies);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º User-Agent –∏ –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36');
    await page.setViewport({ width: 1280, height: 720 });
    await page.setGeolocation({ latitude: 54.0063, longitude: 13.0112 });

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –Ω–∞ TikTok
    await page.goto('https://www.tiktok.com/upload');

    // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    await page.waitForSelector('input[type="file"]');
    const fileInput = await page.$('input[type="file"]');
    await fileInput.uploadFile(path.join(__dirname, '/temp/1.mp4'));

    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –¥–ª—è –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è
    await page.waitForSelector('div[contenteditable="true"]');
    const descriptionField = await page.$('div[contenteditable="true"]');
    await descriptionField.type('teststsst #video', { delay: 100 });  // –¢–∏–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π, –∏–º–∏—Ç–∏—Ä—É—è –ø–æ–≤–µ–¥–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫–∞

    // –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
    await page.waitForSelector('button[data-e2e="publish-button"]:visible');

    // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
    await page.click('button[data-e2e="publish-button"]');

    // –ü–æ–¥–æ–∂–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    setTimeout(()=> browser.close(), 3 * (60*1000))
}
